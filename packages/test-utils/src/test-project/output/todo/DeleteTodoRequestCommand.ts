/* eslint-disable */
/**
 * This file was automatically generated by TypeWeaver.
 * DO NOT EDIT. Instead, modify the source definition file and generate again.
 *
 * @generated by @rexeus/typeweaver
 */

import definition from "../../definition/todo/mutations/DeleteTodoDefinition";
import { HttpMethod, type IHttpResponse } from "@rexeus/typeweaver-core";
import { RequestCommand } from "../lib/clients";
import { DeleteTodoResponseValidator } from "./DeleteTodoResponseValidator";
import type {
  IDeleteTodoRequest,
  IDeleteTodoRequestHeader,
  IDeleteTodoRequestParam,
  SuccessfulDeleteTodoResponse,
} from "./DeleteTodoRequest";

import { DeleteTodoSuccessResponse } from "./DeleteTodoResponse";

export class DeleteTodoRequestCommand
  extends RequestCommand
  implements IDeleteTodoRequest
{
  public override readonly method = definition.method as HttpMethod.DELETE;
  public override readonly path = definition.path;

  public override readonly header: IDeleteTodoRequestHeader;
  public override readonly param: IDeleteTodoRequestParam;
  declare public readonly query: undefined;
  declare public readonly body: undefined;

  private readonly responseValidator: DeleteTodoResponseValidator;

  public constructor(input: Omit<IDeleteTodoRequest, "method" | "path">) {
    super();

    this.header = input.header;

    this.param = input.param;

    this.responseValidator = new DeleteTodoResponseValidator();
  }

  public processResponse(
    response: IHttpResponse,
  ): SuccessfulDeleteTodoResponse {
    const result = this.responseValidator.validate(response);

    if (result instanceof DeleteTodoSuccessResponse) {
      return result;
    }

    throw result;
  }
}
