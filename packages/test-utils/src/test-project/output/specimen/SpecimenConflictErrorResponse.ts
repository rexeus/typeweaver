/* eslint-disable */
/**
 * This file was automatically generated by typeweaver.
 * DO NOT EDIT. Instead, modify the source definition file and generate again.
 *
 * @generated by @rexeus/typeweaver
 */

import { HttpResponse, HttpStatusCode } from "@rexeus/typeweaver-core";

export type ISpecimenConflictErrorResponseHeader = {
  "X-Conflict-ID": string;
  "X-JWT"?: string | undefined;
  "X-URLs": string[];
  "X-Literal": "conflict";
  "X-Email": string;
};

export type ISpecimenConflictErrorResponseBody = {
  message: "Specimen conflict detected with current state";
  code: "SPECIMEN_CONFLICT_ERROR";
  context: {
    specimenId: string;
    conflictingFields: string[];
    lastModified: Date;
    source: string;
    metadata: {
      version: number;
      author: string;
    };
  };
};

export type ISpecimenConflictErrorResponse = {
  statusCode: HttpStatusCode.CONFLICT;
  header: ISpecimenConflictErrorResponseHeader;
  body: ISpecimenConflictErrorResponseBody;
};

export class SpecimenConflictErrorResponse
  extends HttpResponse<
    ISpecimenConflictErrorResponseHeader,
    ISpecimenConflictErrorResponseBody
  >
  implements ISpecimenConflictErrorResponse
{
  public override readonly statusCode: HttpStatusCode.CONFLICT;

  public constructor(response: ISpecimenConflictErrorResponse) {
    super(response.statusCode, response.header, response.body);

    if (response.statusCode !== HttpStatusCode.CONFLICT) {
      throw new Error(
        `Invalid status code: '${response.statusCode}' for SpecimenConflictErrorResponse`,
      );
    }

    this.statusCode = response.statusCode;
  }
}
